<html>

<head>
    <style>
        body {
            font-family: Verdana, sans-serif;
            text-align: center;
            background: #222;
            color: #fff;
            line-height: 200%;
            margin: 0;
        }

        hr {
            border-color: #666;
        }

        button {
            background: #333;
            color: #fff;
            font-family: Verdana, sans-serif;
            border: 0.3ch solid #333;
            display: inline-block;
            font-size: 20px;
            margin: 8px;
            margin-top: 12px;
            cursor: pointer;
        }

        .helpB {
            text-align: left;
            position: absolute;
            width: 60px;
        }

        input {
            background: #333;
            color: #fff;
            font-family: Verdana, sans-serif;
            border: 0.5ch solid #333;
        }

        input[type="number"] {
            width: 4em;
        }

        select {
            background: #333;
            color: #fff;
            font-family: Verdana, sans-serif;
            border: 0.5ch solid #333;
        }

        td {
            padding: 2px;
        }

        .d5 {
            width: 4.5em !important;
        }

        #selectedColor {
            overflow-y: auto;
            /* width:5%; */
            font-size: large;
            border-radius: 40px;
            padding: 20px;
        }

        #selectedEffect {
            overflow-y: auto;
            width: 20%;
            font-size: large;
            border-radius: 20px;
            padding: 10px;

        }

        #backButton {
            width: 20%;
            margin-top: 4%;
            padding: 2%;
            /* padding-bottom: */
            background-color: rgb(121, 65, 65);
        }

        .brightnessButton {
            width: 30%;
            border-radius: 20px;

        }
    </style>
</head>

<body onload="bodyLoaded()">

    <h1 style="padding-top:20px">Choose a color:</h1>
    <select name="selectedColor" id="selectedColor" size="20" class="">
        <!-- The disabled ones seem to be duplicates (but why? maybe there was a mistake when reading signal hex codes?) -->
        <option value="04">TEMP: TURN ON</option>
        <option value="03" selected="selected">TEMP: TURN OFF</option>
        <option value="03" disabled="disabled">--------------</option>

        <option value="08">White</option>

        <option value="03" disabled="disabled">--------------</option>

        <option value="23">Pink</option>
        <option value="15">Purple</option>
        <!-- <option value="18">Purple</option> -->
        <option value="11">Dark Purple</option>

        <option value="03" disabled="disabled">--------------</option>

        <option value="10">Light Green</option>
        <option value="06">Green</option>

        <option value="03" disabled="disabled">--------------</option>

        <!-- <option value="14">Green (aqua)</option> -->
        <option value="19">Light Blue</option>
        <option value="22">Blue</option>
        <option value="07">Dark Blue</option>

        <option value="03" disabled="disabled">--------------</option>

        <option value="21">Light Yellow</option>
        <option value="17">Yellow</option>
        <option value="09">Dark Yellow</option>
        <option value="03" disabled="disabled">--------------</option>

        <option value="05">Red</option>
        <!-- <option value="13">Orange</option> -->



    </select>

    <h1 style="padding-top:20px">Settings:</h1>
    <!-- <button class="btn infobtn" onclick="sendIrCommand('04')">Turn back ON âš¡</button></br> -->
    <button class="btn infobtn brightnessButton" id="" onclick="sendIrCommand('01')">Brightness Up
        &#127774;</button></br>
    <button class="btn infobtn brightnessButton" id="" onclick="sendIrCommand('02')">Brightness Down
        &#127770;</button></br>
    
    <button class="btn infobtn brightnessButton" id="" onclick="autoColor('ON')">Automatic color change ON
    </button></br>
    <button class="btn infobtn brightnessButton" id="" onclick="autoColor('OFF')">Automatic color change OFF
    </button></br>
    <h3 style="padding-top:5px">Effects:</h3>
    <select id='selectedEffect' size="1">
        <option value="" selected="selected">Choose your effect...</option>
        <!-- <option value="12">Flash</option> -->
        <!-- <option disabled selected value style="display:none"></option> -->
        <option value="16">Random colors</option>
        <option value="20">Smooth (fast)</option>
        <option value="24">Smooth (slow)</option>
    </select>
    </br>
    <!-- <form action="/"><button type="submit" id="b">Back</button></form> -->
    <button class="btn infobtn" id="backButton" onclick="window.location.href = '/'">Back</button>
    <!-- <button class="btn infobtn" onclick="sendIrCommand()">Send Command</button> -->
</body>
<script>
    var loc = false;
    function requestJson(command, rinfo = true, verbose = true) {
        var url = rinfo ? '/json/si' : (command ? '/json/state' : '/json');
        // if (loc) {
        // 	url = `http://${locip}${url}`;
        // }

        var type = command ? 'post' : 'get';
        if (command) {
            command.v = verbose;
            command.time = Math.floor(Date.now() / 1000);
            req = JSON.stringify(command);
            //console.log(req);
        }
        fetch
            (url, {
                method: type,
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                },
                body: req
            })
            .then(res => {
                if (!res.ok) {
                    // showErrorToast();
                    console.log("Error when sending json")
                }
                return res.json();
            })
            .then(json => {
                if (json.success) {
                    return;
                }
            });

    }


    function sendIrCommand(command) {
        switch (command) {
            case "color":  // sometimes you have to get it from <select>
                irCommand = document.getElementById('selectedColor').value;
                break;
            case "effect":
                irCommand = document.getElementById('selectedEffect').value;
                break;
            default: // command is actually real command id as is
                irCommand = command;
                break;
        }

        var obj = { "bulbCommand": irCommand };
        console.log(obj);
        requestJson(obj);


    }

    function bodyLoaded() {
        // at load remove any selections
        document.getElementById("selectedEffect").selectedIndex = -1;
        document.getElementById("selectedColor").selectedIndex = -1;
        document.getElementById("selectedColor").addEventListener("change", function () 
        {
            sendIrCommand("color");
            document.getElementById("selectedEffect").selectedIndex = -1; // when there's color choosen forget about the effect
        }); 
        document.getElementById("selectedEffect").addEventListener("change", function () {
            sendIrCommand("effect");
            document.getElementById("selectedColor").selectedIndex = -1; // when there's effect choosen forget about the color
        });

    }

    function autoColor(status){
        // send json with desired status
        var obj = { "autoColor": status };
        console.log(obj);
        requestJson(obj);



    }


</script>

</html>